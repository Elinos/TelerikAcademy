// Generated by CoffeeScript 1.7.1
define(['httpRequester'], function(httpRequester) {
  var persisters;
  return persisters = (function() {
    var MainPersister, PostPersister, UserPersister, clearUserData, saveUserData, sessionKey, username;
    username = localStorage.getItem("username");
    sessionKey = localStorage.getItem("sessionKey");
    saveUserData = function(userData) {
      localStorage.setItem("username", userData.username);
      localStorage.setItem("sessionKey", userData.sessionKey);
      username = userData.username;
      return sessionKey = userData.sessionKey;
    };
    clearUserData = function() {
      localStorage.removeItem("username");
      localStorage.removeItem("sessionKey");
      username = "";
      return sessionKey = "";
    };
    MainPersister = (function() {
      function MainPersister(rootUrl) {
        this.rootUrl = rootUrl;
        this.user = new UserPersister(this.rootUrl);
        this.post = new PostPersister(this.rootUrl);
      }

      MainPersister.prototype.isUserLoggedIn = function() {
        var isLoggedIn;
        return isLoggedIn = username !== null && sessionKey !== null;
      };

      return MainPersister;

    })();
    UserPersister = (function() {
      function UserPersister(rootUrl) {
        this.rootUrl = rootUrl;
      }

      UserPersister.prototype.login = function(user) {
        var url, userData;
        url = this.rootUrl + '/auth';
        userData = {
          username: user.username,
          authCode: CryptoJS.SHA1(user.username + user.password).toString()
        };
        return httpRequester.postJSON(url, userData);
      };

      UserPersister.prototype.register = function(user) {
        var url, userData;
        url = this.rootUrl + '/user';
        userData = {
          username: user.username,
          authCode: CryptoJS.SHA1(user.username + user.password).toString()
        };
        return httpRequester.postJSON(url, userData);
      };

      UserPersister.prototype.logout = function() {
        var url;
        url = this.rootUrl + '/user';
        return httpRequester.putJSON(url, {
          'X-SessionKey': sessionKey
        });
      };

      return UserPersister;

    })();
    PostPersister = (function() {
      function PostPersister(rootUrl) {
        this.rootUrl = rootUrl + "/post";
      }

      PostPersister.prototype.getAllPosts = function() {
        var url;
        url = this.rootUrl + '';
        return httpRequester.getJSON(url);
      };

      PostPersister.prototype.createPost = function(data) {
        var url;
        url = this.rootUrl;
        return httpRequester.postJSON(url, data, {
          'X-SessionKey': sessionKey
        });
      };

      return PostPersister;

    })();
    return {
      get: function(url) {
        return new MainPersister(url);
      },
      saveUserData: saveUserData,
      clearUserData: clearUserData
    };
  })();
});

//# sourceMappingURL=persisters.map
